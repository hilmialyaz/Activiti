package org.milleni.dunning.datamodel.invoicepayment

import org.milleni.dunning.datamodel.model.Customer;
import org.milleni.dunning.datamodel.model.CustomerGroup;
import org.milleni.dunning.datamodel.model.CustomerType;
import org.milleni.dunning.datamodel.model.CustomerInvoices;
import java.util.Date
import java.util.Calendar


declare ExecutionResult
	resultCode : int	
	resultText : String
end

function long doubleToLong(Double doubleValue){
	return doubleValue.longValue();
}

function ExecutionResult setReturnVariables(ExecutionResult res,int resultCode,String resultText) {
	res.setResultCode(resultCode);
	res.setResultText(resultText);
	return res;    
}

function Date currentDate(){
	return new Date();
}

/*
rule "Sum all Invoices fire when less than 10"
when
 res : ExecutionResult(resultCode==0)	
 cus : Customer()
 total : Number() from accumulate( CustomerInvoices( $p:invoiceAmount , paymentStatus=='N' , invoiceDueDate < currentTime()) ) from cus.getCustomerInvoicesCollection() ,sum( $p ))  
then
	System.out.println(total);
	res.setResultCode(1);
	res.setResultText(drools.getRule().getName());
	update(res);
end
*/

/*
rule "Sum all Invoices fire when less than 10"
when
 res : ExecutionResult(resultCode==0)	
 cus : Customer()
 Date($now : time) from Calendar.getInstance().getTime()
 total : Number(doubleValue < 10) from accumulate(
         CustomerInvoices( $p : invoiceAmount ,paymentStatus=='N' , invoiceDueDate before currentDate()  ),
         sum( $p ) )         
then
	System.out.println("total:"+total);
	res.setResultCode(1);
	res.setResultText(drools.getRule().getName());
	update(res);
end
*/

rule "odenmemis fatura toplami 10 tlden az"
when
 res : ExecutionResult(resultCode==0)	
 cus : Customer()
 total : Number(doubleValue < 10) from accumulate( CustomerInvoices(  invoiceDueDate < currentDate() , paymentStatus=='N' , $p:doubleToLong(invoiceAmount) ) from cus.getCustomerInvoicesCollection() ,sum($p ))  
then	
	res.setResultCode(1);
	res.setResultText(drools.getRule().getName());
	update(res);
end

  